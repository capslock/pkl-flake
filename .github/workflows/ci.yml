name: CI

on:
  push:
    branches: [ "main" ]
    paths:
      - 'current.json'
      - '**.nix'
      - '**/flake.lock'
      - '.github/workflows/ci.yml'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'current.json'
      - '**.nix'
      - '**/flake.lock'
      - '.github/workflows/ci.yml'

jobs:
  verify-nix:
    name: Verify Nix
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, macos-14]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Install Nix
      uses: cachix/install-nix-action@v22
      with:
        github_access_token: ${{ secrets.GITHUB_TOKEN }}
    - name: Check flake formatting
      run: nix run nixpkgs#alejandra -- -c .
    - name: Check flake.nix
      run: nix flake check --all-systems
    - name: Check Nix flake Nixpkgs inputs
      uses: DeterminateSystems/flake-checker-action@main
    - name: Build flake
      run: nix build
    - name: Run flake
      run: |
        nix run .# -- -v

  shellcheck:
    name: ShellCheck
    runs-on: ubuntu-latest
    steps:
      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@master

  tag:
    name: Tag Version
    runs-on: ubuntu-latest
    needs: verify-nix
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
        with:
            fetch-tags: true
      - name: Get Tag
        id: get-tag
        run: |
          echo "tag_name=$(jq -r '.tag_name' current.json)" >> "$GITHUB_OUTPUT"
      - name: Check Tag
        id: check-tag
        env:
          TAG_NAME: ${{ steps.get-tag.outputs.tag_name }}
        run: |
          if [ $(git tag -l "$TAG_NAME") ]; then
            echo "needs_tag=false" >> "$GITHUB_OUTPUT"
          else
            echo "needs_tag=true" >> "$GITHUB_OUTPUT"
          fi
      - name: Tag Version
        uses: mathieudutour/github-tag-action@v6.1
        if: ${{ steps.check-tag.outputs.needs_tag == 'true' }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ steps.get-tag.outputs.tag_name }}
